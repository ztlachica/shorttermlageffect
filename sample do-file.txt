clear

use "D:\NICER\Count Regression Models\Dataset_Reportingv2.dta"

//Setting up quarantine to be an ordinal variable with specific levels
label define quarantines 1 1.quarantines 2 2.quarantines 3 3.quarantines 4 4.quarantines

//Setting up lag values
gen cases_L1 = cases[_n-1]
gen cases_L2 = cases[_n-2]
gen cases_L3 = cases[_n-3]
gen cases_L4 = cases[_n-4]
gen cases_L5 = cases[_n-5]
gen cases_L6 = cases[_n-6]
gen cases_L7 = cases[_n-7]
gen cases_L8 = cases[_n-8]
gen cases_L9 = cases[_n-9]
gen cases_L10 = cases[_n-10]
gen cases_L11 = cases[_n-11]
gen cases_L12 = cases[_n-12]
gen cases_L13 = cases[_n-13]
gen cases_L14 = cases[_n-14]
gen cases_L21 = cases[_n-21]
gen cases_L28 = cases[_n-28]

gen rt_L1 = rt[_n-1]
gen rt_L2 = rt[_n-2]
gen rt_L3 = rt[_n-3]
gen rt_L4 = rt[_n-4]
gen rt_L5 = rt[_n-5]
gen rt_L6 = rt[_n-6]
gen rt_L7 = rt[_n-7]
gen rt_L8 = rt[_n-8]
gen rt_L9 = rt[_n-9]
gen rt_L10 = rt[_n-10]
gen rt_L11 = rt[_n-11]
gen rt_L12 = rt[_n-12]
gen rt_L13 = rt[_n-13]
gen rt_L14 = rt[_n-14]
gen rt_L21 = rt[_n-21]
gen rt_L28 = rt[_n-28]

gen quarantines_L1 = quarantines[_n-1]
gen quarantines_L2 = quarantines[_n-2]
gen quarantines_L3 = quarantines[_n-3]
gen quarantines_L4 = quarantines[_n-4]
gen quarantines_L5 = quarantines[_n-5]
gen quarantines_L6 = quarantines[_n-6]
gen quarantines_L7 = quarantines[_n-7]
gen quarantines_L8 = quarantines[_n-8]
gen quarantines_L9 = quarantines[_n-9]
gen quarantines_L10 = quarantines[_n-10]
gen quarantines_L11 = quarantines[_n-11]
gen quarantines_L12 = quarantines[_n-12]
gen quarantines_L13 = quarantines[_n-13]
gen quarantines_L14 = quarantines[_n-14]
gen quarantines_L21 = quarantines[_n-21]
gen quarantines_L28 = quarantines[_n-28]

gen foodrationdistribution_L1 = foodrationdistribution[_n-1]
gen foodrationdistribution_L2 = foodrationdistribution[_n-2]
gen foodrationdistribution_L3 = foodrationdistribution[_n-3]
gen foodrationdistribution_L4 = foodrationdistribution[_n-4]
gen foodrationdistribution_L5 = foodrationdistribution[_n-5]
gen foodrationdistribution_L6 = foodrationdistribution[_n-6]
gen foodrationdistribution_L7 = foodrationdistribution[_n-7]
gen foodrationdistribution_L8 = foodrationdistribution[_n-8]
gen foodrationdistribution_L9 = foodrationdistribution[_n-9]
gen foodrationdistribution_L10 = foodrationdistribution[_n-10]
gen foodrationdistribution_L11 = foodrationdistribution[_n-11]
gen foodrationdistribution_L12 = foodrationdistribution[_n-12]
gen foodrationdistribution_L13 = foodrationdistribution[_n-13]
gen foodrationdistribution_L14 = foodrationdistribution[_n-14]
gen foodrationdistribution_L21 = foodrationdistribution[_n-21]
gen foodrationdistribution_L28 = foodrationdistribution[_n-28]

gen qrcode_L1 = qrcode[_n-1]
gen qrcode_L2 = qrcode[_n-2]
gen qrcode_L3 = qrcode[_n-3]
gen qrcode_L4 = qrcode[_n-4]
gen qrcode_L5 = qrcode[_n-5]
gen qrcode_L6 = qrcode[_n-6]
gen qrcode_L7 = qrcode[_n-7]
gen qrcode_L8 = qrcode[_n-8]
gen qrcode_L9 = qrcode[_n-9]
gen qrcode_L10 = qrcode[_n-10]
gen qrcode_L11 = qrcode[_n-11]
gen qrcode_L12 = qrcode[_n-12]
gen qrcode_L13 = qrcode[_n-13]
gen qrcode_L14 = qrcode[_n-14]
gen qrcode_L21 = qrcode[_n-21]
gen qrcode_L28 = qrcode[_n-28]

gen liquorban_L1 = liquorban[_n-1]
gen liquorban_L2 = liquorban[_n-2]
gen liquorban_L3 = liquorban[_n-3]
gen liquorban_L4 = liquorban[_n-4]
gen liquorban_L5 = liquorban[_n-5]
gen liquorban_L6 = liquorban[_n-6]
gen liquorban_L7 = liquorban[_n-7]
gen liquorban_L8 = liquorban[_n-8]
gen liquorban_L9 = liquorban[_n-9]
gen liquorban_L10 = liquorban[_n-10]
gen liquorban_L11 = liquorban[_n-11]
gen liquorban_L12 = liquorban[_n-12]
gen liquorban_L13 = liquorban[_n-13]
gen liquorban_L14 = liquorban[_n-14]
gen liquorban_L21 = liquorban[_n-21]
gen liquorban_L28 = liquorban[_n-28]

gen receivinglsi_rofw_L1 = receivinglsi_rofw[_n-1]
gen receivinglsi_rofw_L2 = receivinglsi_rofw[_n-2]
gen receivinglsi_rofw_L3 = receivinglsi_rofw[_n-3]
gen receivinglsi_rofw_L4 = receivinglsi_rofw[_n-4]
gen receivinglsi_rofw_L5 = receivinglsi_rofw[_n-5]
gen receivinglsi_rofw_L6 = receivinglsi_rofw[_n-6]
gen receivinglsi_rofw_L7 = receivinglsi_rofw[_n-7]
gen receivinglsi_rofw_L8 = receivinglsi_rofw[_n-8]
gen receivinglsi_rofw_L9 = receivinglsi_rofw[_n-9]
gen receivinglsi_rofw_L10 = receivinglsi_rofw[_n-10]
gen receivinglsi_rofw_L11 = receivinglsi_rofw[_n-11]
gen receivinglsi_rofw_L12 = receivinglsi_rofw[_n-12]
gen receivinglsi_rofw_L13 = receivinglsi_rofw[_n-13]
gen receivinglsi_rofw_L14 = receivinglsi_rofw[_n-14]
gen receivinglsi_rofw_L21 = receivinglsi_rofw[_n-21]
gen receivinglsi_rofw_L28 = receivinglsi_rofw[_n-28]

gen mandatoryfaceshields_L1 = mandatoryfaceshields[_n-1]
gen mandatoryfaceshields_L2 = mandatoryfaceshields[_n-2]
gen mandatoryfaceshields_L3 = mandatoryfaceshields[_n-3]
gen mandatoryfaceshields_L4 = mandatoryfaceshields[_n-4]
gen mandatoryfaceshields_L5 = mandatoryfaceshields[_n-5]
gen mandatoryfaceshields_L6 = mandatoryfaceshields[_n-6]
gen mandatoryfaceshields_L7 = mandatoryfaceshields[_n-7]
gen mandatoryfaceshields_L8 = mandatoryfaceshields[_n-8]
gen mandatoryfaceshields_L9 = mandatoryfaceshields[_n-9]
gen mandatoryfaceshields_L10 = mandatoryfaceshields[_n-10]
gen mandatoryfaceshields_L11 = mandatoryfaceshields[_n-11]
gen mandatoryfaceshields_L12 = mandatoryfaceshields[_n-12]
gen mandatoryfaceshields_L13 = mandatoryfaceshields[_n-13]
gen mandatoryfaceshields_L14 = mandatoryfaceshields[_n-14]
gen mandatoryfaceshields_L21 = mandatoryfaceshields[_n-21]
gen mandatoryfaceshields_L28 = mandatoryfaceshields[_n-28]

gen temperature_L1 = temperature[_n-1]
gen temperature_L2 = temperature[_n-2]
gen temperature_L3 = temperature[_n-3]
gen temperature_L4 = temperature[_n-4]
gen temperature_L5 = temperature[_n-5]
gen temperature_L6 = temperature[_n-6]
gen temperature_L7 = temperature[_n-7]
gen temperature_L8 = temperature[_n-8]
gen temperature_L9 = temperature[_n-9]
gen temperature_L10 = temperature[_n-10]
gen temperature_L11 = temperature[_n-11]
gen temperature_L12 = temperature[_n-12]
gen temperature_L13 = temperature[_n-13]
gen temperature_L14 = temperature[_n-14]
gen temperature_L21 = temperature[_n-21]
gen temperature_L28 = temperature[_n-28]

gen rainfall_L1 = rainfall[_n-1]
gen rainfall_L2 = rainfall[_n-2]
gen rainfall_L3 = rainfall[_n-3]
gen rainfall_L4 = rainfall[_n-4]
gen rainfall_L5 = rainfall[_n-5]
gen rainfall_L6 = rainfall[_n-6]
gen rainfall_L7 = rainfall[_n-7]
gen rainfall_L8 = rainfall[_n-8]
gen rainfall_L9 = rainfall[_n-9]
gen rainfall_L10 = rainfall[_n-10]
gen rainfall_L11 = rainfall[_n-11]
gen rainfall_L12 = rainfall[_n-12]
gen rainfall_L13 = rainfall[_n-13]
gen rainfall_L14 = rainfall[_n-14]
gen rainfall_L21 = rainfall[_n-21]
gen rainfall_L28 = rainfall[_n-28]

summarize

histogram cases, discrete freq scheme(s1mono) width(4)

//For LD = 0
zip cases rt b2.quarantines i.foodrationdistribution i.qrcode i.liquorban i.receivinglsi_rofw i.mandatoryfaceshields c.temperature rainfall, inflate (weekend) vce(r)
estat ic
zinb cases rt b2.quarantines i.foodrationdistribution i.qrcode i.liquorban i.receivinglsi_rofw i.mandatoryfaceshields c.temperature rainfall, inflate (weekend) vce(r)
estat ic
margins, dydx(weekend) predict(pr)
bootstrap, reps(1000): zinb cases rt b2.quarantines i.foodrationdistribution i.qrcode i.liquorban i.receivinglsi_rofw i.mandatoryfaceshields c.temperature rainfall, inflate (weekend) vce(r)
margins, dydx(3.quarantines 4.quarantines rt i.foodrationdistribution i.qrcode i.liquorban i.receivinglsi_rofw i.mandatoryfaceshields) atmean
margins, dydx(c.temperature rainfall) atmean
marginsplot, horizontal xline(34.00254, lpattern(dash_dot)) xline(0) yscale(reverse) recast(scatter)
regress cases rt b2.quarantines i.foodrationdistribution i.qrcode i.liquorban i.receivinglsi_rofw i.mandatoryfaceshields c.temperaturev2 rainfall
estat vif //testing for vif

//Use the appropriate variables for the other lags